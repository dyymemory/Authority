using ERP.Authority.DAL;
using ERP.Authority.Entity.SDTM;
using ERP.Authority.Entity.SDTMComm;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ERP.Authority.General;

namespace ERP.Authority.BLL
{
    public class Priv_DepartmentBLL
    {
        /// <summary>
        /// 获取门店权限
        /// </summary>
        /// <param name="privDepartmentData"></param>
        /// <returns></returns>
        public ResultModel<List<dynamic>> GetPrivDepartmentList(Priv_DepartmentData privDepartmentData)
        {
            var msg = new ResultModel<List<dynamic>>();
            if (privDepartmentData.TypeCodeList.Count == 0)
            {
                msg.Code = 2001;
                msg.Message = "数据类型不允许为空";
                return msg;
            }
            msg.Data = new Priv_DepartmentDAL().GetPrivDepartmentList(privDepartmentData);
            return msg;
        }

        /// <summary>
        /// 保存门店管辖权限
        /// </summary>
        /// <param name="privDepartmentData"></param>
        /// <param name="user"></param>
        /// <returns></returns>
        public ResultModel<object> SaveDivisitionPrivDepartment(Priv_DepartmentData privDepartmentData, UserInfoForCookie user)
        {
            var typeCode = "dep-divisition-sel";
            privDepartmentData.TypeCode = typeCode;
            Priv_DepartmentDAL privDepartmentDal = new Priv_DepartmentDAL();
            var listPrivDepartment = privDepartmentDal.GetPrivDepartmentList(privDepartmentData, true);
            //数据库所有数据
            List<int> allPrivDepartment = new List<int>();
            listPrivDepartment.ForEach(item => allPrivDepartment.Add(item.DataCode));
            //需要新增的数据，勾选的数据与数据库所有数据的差集
            List<int> listInsert = privDepartmentData.DepDivisitionSel.Except(allPrivDepartment).ToList();
            var insertPrivDepartment = listInsert.Select(dataCode => new Priv_Department()
            {
                DepartOnlyCode = privDepartmentData.DepartOnlyCode,
                CityID = privDepartmentData.CityID,
                PlatForm = 1,
                TypeCode = typeCode,
                DataCode = dataCode,
                Creator = user.EmpCode
            }).ToList().ToDataTable();
            //需要修改为已选择的数据，勾选的数据与数据库所有数据的交集
            List<int> listSelected = privDepartmentData.DepDivisitionSel.Intersect(allPrivDepartment).ToList();
            //需要修改为未选择的数据，数据库所有数据与已选择数据的差集
            List<int> listCancel = allPrivDepartment.Except(listSelected).ToList();
            privDepartmentDal.SaveDivisitionPrivDepartment(privDepartmentData, insertPrivDepartment, listSelected, listCancel);
            return new ResultModel<object>();
        }
    }
}
